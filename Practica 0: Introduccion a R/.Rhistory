m <- matrix(1:16, nrow = 4, ncol = 4)
m
m[5]
m[,5]
m[6]
?min
d <- dim(m)
min(d)
min(d)
m[(1:d[1]*d[1] + j]
m[(1:d[1]*d[1] + j])
m[(1:d[1]*d[1] + j)
q
m[(1:d[1]*d[1] + j)
q
m[(1:d[1]*d[1] + j)]
m[(1:d[1]*d[1] + 1:d[2])]
m
m[(0:d[1]*d[1] + 1:d[2])]
m[(1:d[1]*d[1] + 0:d[2])]
m[(1:d[1]*d[1] + 0:(d[2]-1)]
m[(1:d[1]*d[1] + 0:(d[2]-1))]
m
m[(1:d[1]*d[1] + 1:d[1])
q
m[(1:d[1]*d[1] + 1:d[1])]
m[((1:d[1])*d[1] + 1:d[1])]
m[((1:d[1]) + 1:d[1])]
m
m[((1:d[1])*d[1] + 1:d[1])]
m[((1:d[1]-1)*d[1] + 1:d[1])]
m
m[1] = -1;
m[3,] <- 1
m
rr= matrix(rep(1:4,each=2),ncol=2, byrow=T)
mm[rr]
m[rr]
rr
?matrix
m <- matrix(ncol = nrow, nrow = 1, byrow = T, data =  rep(1:nrow,each = ncol))
nrow = 1
m <- matrix(nrow = 1, ncol = nrow, byrow = T, data =  rep(1:nrow,each = ncol))
m
m <- matrix(nrow = 4, ncol = nrow, byrow = T, data =  rep(1:nrow,each = ncol))
m
m <- matrix(nrow = 4, ncol = 44, byrow = T, data =  rep(1:nrow,each = ncol))
m
m <- matrix(nrow = 4, ncol = 4, byrow = T, data =  rep(1:nrow,each = ncol))
m
m <- matrix(nrow = 4, ncol = 4, byrow = T, data =  rep(1:4,each = ncol))
m
m <- matrix(nrow = 4, ncol = 4, byrow = T, data =  rep(1:4,each = 4))
m
r <- (c(1, 3, 2, 2, 3, 2), nrow = 3, ncol = 2, byrow = T)
r <- (data = c(1, 3, 2, 2, 3, 2), nrow = 3, ncol = 2, byrow = T)
r <- matrix(c(1, 3, 2, 2, 3, 2), nrow = 3, ncol = 2, byrow = T)
r
m[r] <- 0
m
?runif
runif(1)
runif(2)
runif(2,-50,50)
runif(2,-50,50)
runif(2,-50,50)
runif(2,-50,50)
runif(5,-50,50)
runif(5,-50,50)
runif(5,-50,50)
?matrix
matrix(ncol = 2, nrow = 1, data = runif(nrow, -50,50))
matrix(ncol = 2, nrow = 2, data = runif(nrow, -50,50))
matrix(ncol = 2, nrow = 3, data = runif(nrow, -50,50))
n = 1
matrix(ncol = 2, nrow = n, data = runif(nrow, -50,50))
n_puntos = 4
matrix(ncol = 2, nrow = n_puntos, data = runif(nrow, -50,50))
n_puntos = 4
matrix(ncol = 2, nrow = n_puntos, data = runif(nrow, -50,50))
matrix(ncol = 2, nrow = 2, data = runif(nrow, -50,50))
matrix(ncol = 2, nrow = 2, data = runif(nrow, -50,50))
matrix(ncol = 2, nrow = 2, data = runif(nrow, -50,50), byrow = T)
runif(2,-50,50)
runif(2,-50,50)
runif(2,-50,50)
class(runif(2,-50,50))
class(c(2)
cc
class(c(2,2,1,3)
xx
x <- c(2,2)
class(x)
mode(x)
x
as.matrix(runif(2,-50,50))
as.matrix(x = runif(2,-50,50), )
as.matrix(nrow = 2, ncol = 2, x = runif(2,-50,50), )
as.matrix(nrow = 2, ncol = 2, x = runif(24,-50,50), )
as.matrix(nrow = 2, ncol = 2, x = runif(4,-50,50), )
as.matrix(ncol = 2, x = runif(4,-50,50), )
as.matrix(ncol = 2, x = runif(4,-50,50), )
args(as.matrix)
?as.matrix
matrix(ncol = 2, nrow = 2, data = runif(nrow*2, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow*2, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow*2, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * 4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * 2, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(2 * 2, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(x = nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow * 2, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow * 4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow * 3, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow * 3, -50,50), byrow = T)
matrix(ncol = 2, nrow = 2, data = runif(nrow * 4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 3, data = runif(nrow * 4, -50,50), byrow = T)
matrix(ncol = 2, nrow = 3, data = runif(nrow * 6, -50,50), byrow = T)
matrix(ncol = 2, nrow = 3, data = runif(nrow * 6, -50,50), byrow = T
cc
n = 2
n_puntos = 4
matrix(ncol = 2, nrow = 3, data = runif(2 * n_puntos, -50,50), byrow = T)
n_punto
print("Ejercicio 1.25 Generar un conjunto de datos data.unif de valores uniformes de parámetros: N, dim, rango,
donde N = 50 son vectores de dimensión dim = 2, uniformes en el intervalo [−50, 50], esto es,
rango = c(−50, 50).")
n_puntos = 4
matrix(ncol = 2, nrow = 3, data = runif(2 * n_puntos, -50,50), byrow = T)
n_puntos = 4
matrix(ncol = 2, nrow = 3, data = runif(2 * n_puntos, -50,50), byrow = T)
n_puntos = 4
n_puntos = 4
matrix(ncol = 2, nrow = n_puntos, data = runif(2 * n_puntos, -50,50), byrow = T)
n_puntos = 5
matrix(ncol = 2, nrow = n_puntos, data = runif(2 * n_puntos, -50,50), byrow = T)
matrix(ncol = 2, nrow = 3, data = runif(2 * n_puntos, -50,50), byrow = T)
data.norm = 0
data.norm
dim = 2
n_puntos = 5
min = -50
max = 50
matrix(ncol = dim, nrow = n_puntos, data = runif(dim * n_puntos, min, max), byrow = T)
dim = 3
n_puntos = 5
min = -50
max = 50
matrix(ncol = dim, nrow = n_puntos, data = runif(dim * n_puntos, min, max), byrow = T)
?runif
matrix(ncol = dim, nrow = n_puntos, data = runif(dim * n_puntos, min, max), byrow = T)
matrix(ncol = dim, nrow = n_puntos, data = runif(dim * n_puntos, min, max), byrow = T)
?rnorm
matrix(ncol = dim, nrow = n_puntos, data = rnorm(dim * n_puntos, v[1], v[2]), byrow = T)
dim = 2
n_puntos = 5
v = c(0, 1)
matrix(ncol = dim, nrow = n_puntos, data = rnorm(dim * n_puntos, v[1], v[2]), byrow = T)
?factor
rep(1:3, times=10)
sample(rep(1:3, times=10))
sample(rep(1:3, times=10))
sample(rep(1:3, times=10))
sample(rep(1:3, times=10))
as.factor(sample(rep(1:3, times=10)))
as.factor(sample(rep(1:4, times=10)))
as.factor(sample(rep(1:4, times=10)))
levels(ciudades) <- ("Granada", "Ceuta", "Malaga", "Jaen")
levels(ciudades) <- ("Granada", "Ceuta","Malaga", "Jaen")
levels(ciudades) <- c("Granada", "Ceuta","Malaga", "Jaen")
ciudades <- as.factor(sample(rep(1:3, times=10)))
levels(ciudades) <- c("Granada", "Ceuta","Malaga", "Jaen")
table(cidades)
tables(cidades)
table(ciudades)
ciudades <- as.factor(sample(rep(1:4, times=10)))
levels(ciudades) <- c("Granada", "Ceuta","Malaga", "Jaen")
table(ciudades)
