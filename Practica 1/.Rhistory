v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1.5,-1.5)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1,-1)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
dimnames(resultados) <- list(c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4"),c("X","Y","Z"))
resultados
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- 0
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1.5,-1.5)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1,-1)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
dimnames(resultados) <- list(c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4"),c("X","Y","Z"))
resultados
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -10**-5
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1.5,-1.5)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1,-1)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
dimnames(resultados) <- list(c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4"),c("X","Y","Z"))
resultados
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -1
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -10**-2
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1.5,-1.5)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1,-1)
res <- BatchGradientDescent(punto_inicio, func, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
dimnames(resultados) <- list(c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4"),c("X","Y","Z"))
resultados
?exp
exp(1)
?matrix
?rbind()
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
BatchGradientDescentG = function( start, f, fu, fv, mu, epsilon,limit = Inf) {
x <- 0
y <- 0
u <- start[1]
v <- start[2]
iteraciones <- 0
grafico <- matrix(start, nrow = 1, ncol = 2, byrow = T)
while(eval(f) > epsilon && iteraciones < limit) {
x <- u - mu * eval(fu)
y <- v - mu * eval(fv)
u <- x
v <- y
grafico <- rbind(grafico, c(u,v))
iteraciones <- iteraciones + 1
}
list(u,v,iteraciones,grafico)
}
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
f <- function(x,y) {(x-2)**2 + 2*(y+2)**2 + 2*sin(2*pi*x)*sin(2*pi*y)}
x <- 0:50
y <- 0:50
z <- outer(x,y,f)
persp(x,y,z,theta = -45, phi = 25, col = "orange")
f <- expression((u-2)**2 + 2*(v+2)**2 + 2*sin(2*pi*u)*sin(2*pi*v))
fu <- expression( 2*(u-2)+2*sin(2*pi*v)*cos(2*pi*u)*2*pi )
fv <- expression( 4*(v+2)+2*sin(2*pi*u)*cos(2*pi*v)*2*pi)
BatchGradientDescentG = function( start, f, fu, fv, mu, epsilon,limit = Inf) {
x <- 0
y <- 0
u <- start[1]
v <- start[2]
iteraciones <- 0
grafico <- matrix(start, nrow = 1, ncol = 2, byrow = T)
while(eval(f) > epsilon && iteraciones < limit) {
x <- u - mu * eval(fu)
y <- v - mu * eval(fv)
u <- x
v <- y
grafico <- rbind(grafico, c(u,v))
iteraciones <- iteraciones + 1
}
list(u,v,iteraciones,grafico)
}
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
grafico <- as.matrix(res[4])
grafico
cat("Para un epsilon = ", epsilon, "\n\t-xmin = ", u,"\n\t-ymax = ", v)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
res[4]
BatchGradientDescentG = function( start, f, fu, fv, mu, epsilon,limit = Inf) {
x <- 0
y <- 0
u <- start[1]
v <- start[2]
iteraciones <- 0
grafico <- matrix(c(u,v,eval(f)), nrow = 1, ncol = 2, byrow = T)
while(eval(f) > epsilon && iteraciones < limit) {
x <- u - mu * eval(fu)
y <- v - mu * eval(fv)
u <- x
v <- y
grafico <- rbind(grafico, c(u,v,eval(f)))
iteraciones <- iteraciones + 1
}
list(u,v,iteraciones,grafico)
}
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
res[4]
BatchGradientDescentG = function( start, f, fu, fv, mu, epsilon,limit = Inf) {
x <- 0
y <- 0
u <- start[1]
v <- start[2]
iteraciones <- 0
grafico <- matrix(c(u,v,eval(f)), nrow = 1, ncol = 3, byrow = T)
while(eval(f) > epsilon && iteraciones < limit) {
x <- u - mu * eval(fu)
y <- v - mu * eval(fv)
u <- x
v <- y
grafico <- rbind(grafico, c(u,v,eval(f)))
iteraciones <- iteraciones + 1
}
list(u,v,iteraciones,grafico)
}
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
res[4]
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[4]
persp(graficos[,1],graficos[,2],graficos[,3])
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[4]
graficos
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[4]
graficos
dim(graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
graficos
dim(graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
persp(graficos[,1],graficos[,2],graficos[,3])
?plot
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos[,1],graficos[,2])
?image
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
image(1,2,graficos[,1],graficos[,2],graficos[,3])
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
image(1,2,graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
image("1","2"",graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
image("1","2",graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
image(1,2,graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
image(graficos)
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos)
BatchGradientDescentG = function( start, f, fu, fv, mu, epsilon,limit = Inf) {
x <- 0
y <- 0
u <- start[1]
v <- start[2]
iteraciones <- 0
grafico <- matrix(c(iteraciones,eval(f)), nrow = 1, ncol = 2, byrow = T)
while(eval(f) > epsilon && iteraciones < limit) {
x <- u - mu * eval(fu)
y <- v - mu * eval(fv)
u <- x
v <- y
iteraciones <- iteraciones + 1
grafico <- rbind(grafico, c(iteraciones,eval(f)))
}
list(u,v,iteraciones,grafico)
}
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos)
?plot
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos, xlabel = "Iteraciones", ylabel = "f(x,y)")
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos, xlab = "Iteraciones", ylab = "f(x,y)")
punto_inicio <- c(1,1)
mu <- 0.01
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos, xlab = "Iteraciones", ylab = "Valor")
punto_inicio <- c(1,1)
mu <- 0.1
epsilon <- -Inf
limit <- 50
res <- BatchGradientDescentG(punto_inicio, f, fu, fv, mu, epsilon, limit)
u <- res[1]
v <- res[2]
graficos <- res[[4]]
plot(graficos, xlab = "Iteraciones", ylab = "Valor")
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -10**-2
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
BatchGradientDescent = function( start, f, fu, fv, mu, epsilon,limit = Inf) {
x <- 0
y <- 0
u <- start[1]
v <- start[2]
iteraciones <- 0
while(eval(f) > epsilon && iteraciones < limit) {
x <- u - mu * eval(fu)
y <- v - mu * eval(fv)
u <- x
v <- y
iteraciones <- iteraciones + 1
}
c(u,v,iteraciones)
}
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -10**-2
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1.5,1.5)
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:50000
y <- 0:50000
z <- outer(x,y,f)
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:5000
y <- 0:5000
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:500
y <- 0:500
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:50
y <- 0:50
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:500
y <- 0:500
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:250
y <- 0:250
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:400
y <- 0:400
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:350
y <- 0:350
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {( (x ** 3) * (exp(y - 2) )  - 4 * (y ** 3) * exp(-x) ) ** 2}
x <- 0:300
y <- 0:300
z <- outer(x,y,f)
persp(x,y,z,theta = -25, phi = 25, col = "orange")
f <- function(x,y) {(x-2)**2 + 2*(y+2)**2 + 2*sin(2*pi*x)*sin(2*pi*y)}
x <- 0:300
y <- 0:300
z <- outer(x,y,f)
persp(x,y,z,theta = -45, phi = 25, col = "orange")
f <- expression((u-2)**2 + 2*(v+2)**2 + 2*sin(2*pi*u)*sin(2*pi*v))
fu <- expression( 2*(u-2)+2*sin(2*pi*v)*cos(2*pi*u)*2*pi )
fv <- expression( 4*(v+2)+2*sin(2*pi*u)*cos(2*pi*v)*2*pi)
?persp
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -10**-2
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- matrix(c(u,v,eval(f)), ncol = 3, byrow = T)
punto_inicio <- c(3,-3)
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
u <- res[1]
v <- res[2]
resultados <- rbind(resultados,c(u,v,eval(f)))
punto_inicio <- c(1.5,1.5)
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
punto_inicio <- c(2.1,-2.1)
mu <- 0.01
epsilon <- -10**-2
res <- BatchGradientDescent(punto_inicio, f, fu, fv, mu, epsilon)
